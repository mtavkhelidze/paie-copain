# Probably we can generate this from Typesript or vise-versa. And, while
# we're not doing that, make sure those below corresponds to types.d.ts.

type Transaction {
    id: Int
    created: String
    nostro: String
    vostro: String
    amount: Int
}

type Customer {
    id: String
    email: String
    name: String
    balance: Int
    transactions: [Transaction]
}

type RootQuery {
    customer(id: ID): Customer
    customers: [Customer]
    transaction(id: ID): Transaction
    transactions: [Transaction]
}

input CustomerInput {
    email: String
    name: String
}

input TransactionInput {
    nostro: String
    vostro: String
    amount: Int
}

# Add destroy/update X later
type RootMutations {
    createCustomer(input: CustomerInput!): Customer
    createTransaction(input: TransactionInput!): Transaction
}

schema {
    query: RootQuery
    mutation: RootMutations
}
